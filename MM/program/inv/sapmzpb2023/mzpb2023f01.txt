*&---------------------------------------------------------------------*
*&  Include           MZPB2023F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  INIT_ALV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM init_alv USING po_con TYPE REF TO cl_gui_custom_container
                    po_grid TYPE REF TO cl_gui_alv_grid
              VALUE(p_con_name).

  CREATE OBJECT po_con
    EXPORTING
*     parent                      =
      container_name              = p_con_name
*     style                       =
*     lifetime                    = lifetime_default
*     repid                       =
*     dynnr                       =
*     no_autodef_progid_dynnr     =
    EXCEPTIONS
      cntl_error                  = 1
      cntl_system_error           = 2
      create_error                = 3
      lifetime_error              = 4
      lifetime_dynpro_dynpro_link = 5
      OTHERS                      = 6.
  IF sy-subrc <> 0.
*   MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*              WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

  IF sy-subrc <> 0.
    "& Object Exceptions
    MESSAGE a000(zmcpb) WITH 'CL_GUI_DOCKING_CONTAINER'(m01).
  ENDIF.


  CREATE OBJECT po_grid
    EXPORTING
*     i_shellstyle      = 0
*     i_lifetime        =
      i_parent          = po_con
    EXCEPTIONS
      error_cntl_create = 1
      error_cntl_init   = 2
      error_cntl_link   = 3
      error_dp_create   = 4
      OTHERS            = 5.
  IF sy-subrc <> 0.
    "& Object Exceptions
    MESSAGE a000(zmcpb) WITH 'CL_GUI_ALV_GRID'(m02).
  ENDIF.

  "Event Register
  PERFORM req_event_for_alv.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  REQ_EVENT_FOR_ALV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM req_event_for_alv .
  SET HANDLER:
    lcl_event_handler=>handle_double_click  FOR go_alv_0100,
    lcl_event_handler=>handle_hotspot_click FOR go_alv_0100.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_LAYOUT_H
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_layout_h CHANGING ps_layo TYPE lvc_s_layo.
  CLEAR ps_layo.
  ps_layo-sel_mode   = gc_a.
  ps_layo-cwidth_opt = gc_x.
  ps_layo-zebra      = gc_x.
  ps_layo-excp_fname = gc_light.
  ps_layo-excp_led   = gc_x.
  ps_layo-info_fname = gc_lcolor.
  ps_layo-smalltitle = gc_x.
  ps_layo-grid_title = '송장 리스트'(t07).

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_LAYOUT_I
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_layout_i  CHANGING ps_layo TYPE lvc_s_layo.
  CLEAR ps_layo.
  ps_layo-sel_mode = gc_a.
  ps_layo-cwidth_opt = gc_x.
  ps_layo-zebra = gc_x.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT_H
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_fcat_h  USING VALUE(p_sname) TYPE dd02l-tabname
                    CHANGING pt_fcat  TYPE lvc_t_fcat.
  CLEAR pt_fcat.
  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      i_structure_name = p_sname
    CHANGING
      ct_fieldcat      = pt_fcat.

  PERFORM set_fieldcat_h CHANGING pt_fcat.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT_I
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_fcat_popup USING VALUE(p_sname) TYPE dd02l-tabname
                       CHANGING pt_fcat TYPE lvc_t_fcat.
  CLEAR pt_fcat.
  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      i_structure_name = p_sname
    CHANGING
      ct_fieldcat      = pt_fcat.

  PERFORM set_fieldcat_popup CHANGING pt_fcat.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_ALV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM display_alv USING po_alv  TYPE REF TO cl_gui_alv_grid
                       p_sname TYPE dd02l-tabname
                       ps_layo TYPE lvc_s_layo
                       pt_fcat TYPE lvc_t_fcat
*                       pt_sort TYPE lvc_t_sort
                       pt_outtab.
  CALL METHOD po_alv->set_table_for_first_display
    EXPORTING
*     i_buffer_active               =
*     i_bypassing_buffer            =
*     i_consistency_check           =
      i_structure_name              = p_sname
*     is_variant                    =
*     i_save                        =
*     i_default                     = gc_x
      is_layout                     = ps_layo
*     is_print                      =
*     it_special_groups             =
*     it_toolbar_excluding          = pt_excl
*     it_hyperlink                  =
*     it_alv_graphics               =
*     it_except_qinfo               =
*     ir_salv_adapter               =
    CHANGING
      it_outtab                     = pt_outtab
      it_fieldcatalog               = pt_fcat
*     it_sort                       = pt_sort
*     it_filter                     =
    EXCEPTIONS
      invalid_parameter_combination = 1
      program_error                 = 2
      too_many_lines                = 3
      OTHERS                        = 4.
  IF sy-subrc <> 0.
    "& Object Exceptions
    MESSAGE a000(zmcpb) WITH 'ALV Display'(m03).

  ENDIF.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  REFRESH_ALV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM refresh_alv USING po_alv   TYPE REF TO cl_gui_alv_grid
                       ps_layo  TYPE lvc_s_layo
                       pt_fcat  TYPE lvc_t_fcat
                       pv_x     TYPE c.
  DATA: ls_stbl TYPE lvc_s_stbl,
        lt_rows TYPE lvc_t_row,
        ls_rows LIKE LINE OF lt_rows.

  CALL METHOD po_alv->set_frontend_fieldcatalog
    EXPORTING
      it_fieldcatalog = pt_fcat.

  CALL METHOD po_alv->set_frontend_layout
    EXPORTING
      is_layout = ps_layo.
  " BEFORE
**  ls_stbl-row = gc_x. "( row scroll Fix )
**  ls_stbl-col = gc_x. "( col scroll Fix )
*  po_alv->refresh_table_display( EXPORTING "i_soft_refresh = gc_x
*                                           is_stable      = ls_stbl ).
  " AFTER
  ls_stbl-row = pv_x. "( row scroll Fix )
  ls_stbl-col = pv_x. "( col scroll Fix )
  po_alv->refresh_table_display( EXPORTING i_soft_refresh = pv_x
                                           is_stable      = ls_stbl ).
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_DEFAULT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_default .
  " 조회조건 기본값
  PERFORM set_checkbox.

  " 날짜 기본값 (그렇지 않으면 모든 GR,GI,INV 출력됨)
  PERFORM set_gr_gi_date.

  " 기본 조회
  PERFORM search_data.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_CHECKBOX
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_checkbox .
  zspb2021-itype = gc_p. " 지급
  zspb2021-chk1  = gc_x. " 미생성
  zspb2021-chk2  = gc_x. " 대기
  zspb2021-chk3  = gc_x. " 승인
*  zspb2021-chk4  = gc_x. " 취소
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_GR_GI_DATE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_gr_gi_date .
  DATA: lv_olddate TYPE sy-datum,
        lv_newdate TYPE sy-datum.

  lv_olddate = sy-datum.
  CALL FUNCTION 'RE_ADD_MONTH_TO_DATE'
    EXPORTING
      months  = -1
      olddate = lv_olddate
    IMPORTING
      newdate = lv_newdate.

  zspb2021-stdat_b = lv_newdate+0(6) && '01'. " '20250101'.
  zspb2021-pgidt_b = lv_newdate+0(6) && '01'. " '20250101'.
  zspb2021-stdat_e = '20251020'. "lv_olddate. " '20251231'. "
  zspb2021-pgidt_e = '20251020'. " lv_olddate. " '20251231'. "

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SEARCH_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM search_data .
  CLEAR gv_subrc.
  " 조회조건 체크
  PERFORM condition_check CHANGING gv_subrc.
  IF gv_subrc IS NOT INITIAL.
    RETURN.

  ENDIF.

  CLEAR gv_subrc.
  " alv 헤더 select
  PERFORM select_grgi CHANGING gv_subrc.
  IF gv_subrc IS NOT INITIAL.
    RETURN.

  ENDIF.

  IF gt_list_h IS INITIAL.
    CLEAR: gt_list_h, gt_list_i.
    " & & & & 일치하는 정보가 없습니다.
    MESSAGE i001(zmcpb) WITH '조회하신 조건과'(t18).
    RETURN.

  ENDIF.

  " 조회 건수
  DATA(lv_lines) = lines( gt_list_h ).
  MESSAGE s029(zmcpb) WITH lv_lines.

  " alv 헤더 modify
  PERFORM modify_list_price.

  PERFORM modify_list.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_RANGES
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_ranges CHANGING pv_subrc.
  PERFORM set_vendor_range. " 공급업체
  PERFORM set_custom_range. " 납품업체
  PERFORM set_grnum_range.  " 입고번호
  PERFORM set_ginum_range.  " 출고번호
  PERFORM set_stdat_range CHANGING pv_subrc.  " 입고일
  PERFORM set_pgidt_range CHANGING pv_subrc.  " 출고일
  PERFORM set_iflag_range.  " 송장상태

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_VENDOR_RANGE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_vendor_range .
  CLEAR: gr_vendr[], gr_vendr.
  " low ~ high
  IF zspb2021-vendr_b IS NOT INITIAL AND
     zspb2021-vendr_e IS NOT INITIAL.
    gr_vendr-sign   = 'I'.
    gr_vendr-option = 'BT'.
    gr_vendr-low    = zspb2021-vendr_b.
    gr_vendr-high   = zspb2021-vendr_e.
    APPEND gr_vendr.
    " low
  ELSEIF zspb2021-vendr_b IS NOT INITIAL.
    gr_vendr-sign   = 'I'.
    gr_vendr-option = 'EQ'.
    gr_vendr-low    = zspb2021-vendr_b.
    APPEND gr_vendr.
    " high
  ELSEIF zspb2021-vendr_e IS NOT INITIAL.
    gr_vendr-sign   = 'I'.
    gr_vendr-option = 'EQ'.
    gr_vendr-low    = zspb2021-vendr_e.
    APPEND gr_vendr.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_CUSTOM_RANGE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_custom_range .
  CLEAR: gr_custom[], gr_custom.
  " low ~ high
  IF zspb2021-cusnr_b IS NOT INITIAL AND
     zspb2021-cusnr_e IS NOT INITIAL.
    gr_custom-sign   = 'I'.
    gr_custom-option = 'BT'.
    gr_custom-low    = zspb2021-cusnr_b.
    gr_custom-high   = zspb2021-cusnr_e.
    APPEND gr_custom.
    " low
  ELSEIF zspb2021-cusnr_b IS NOT INITIAL.
    gr_custom-sign   = 'I'.
    gr_custom-option = 'EQ'.
    gr_custom-low    = zspb2021-cusnr_b.
    APPEND gr_custom.
    " high
  ELSEIF zspb2021-cusnr_e IS NOT INITIAL.
    gr_custom-sign   = 'I'.
    gr_custom-option = 'EQ'.
    gr_custom-low    = zspb2021-cusnr_e.
    APPEND gr_custom.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_GRNUM_RANGE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_grnum_range .
  CLEAR: gr_grnum[], gr_grnum.
  " low ~ high
  IF zspb2021-grnum_b IS NOT INITIAL AND
     zspb2021-grnum_e IS NOT INITIAL.
    gr_grnum-sign   = 'I'.
    gr_grnum-option = 'BT'.
    gr_grnum-low    = zspb2021-grnum_b.
    gr_grnum-high   = zspb2021-grnum_e.
    APPEND gr_grnum.
    " low
  ELSEIF zspb2021-grnum_b IS NOT INITIAL.
    gr_grnum-sign   = 'I'.
    gr_grnum-option = 'EQ'.
    gr_grnum-low    = zspb2021-grnum_b.
    APPEND gr_grnum.
    " high
  ELSEIF zspb2021-grnum_e IS NOT INITIAL.
    gr_grnum-sign   = 'I'.
    gr_grnum-option = 'EQ'.
    gr_grnum-low    = zspb2021-grnum_e.
    APPEND gr_grnum.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_GINUM_RANGE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_ginum_range .
  CLEAR: gr_ginum[], gr_ginum.
  " low ~ high
  IF zspb2021-ginum_b IS NOT INITIAL AND
     zspb2021-ginum_e IS NOT INITIAL.
    gr_ginum-sign   = 'I'.
    gr_ginum-option = 'BT'.
    gr_ginum-low    = zspb2021-ginum_b.
    gr_ginum-high   = zspb2021-ginum_e.
    APPEND gr_ginum.
    " low
  ELSEIF zspb2021-grnum_b IS NOT INITIAL.
    gr_ginum-sign   = 'I'.
    gr_ginum-option = 'EQ'.
    gr_ginum-low    = zspb2021-ginum_b.
    APPEND gr_ginum.
    " high
  ELSEIF zspb2021-grnum_e IS NOT INITIAL.
    gr_ginum-sign   = 'I'.
    gr_ginum-option = 'EQ'.
    gr_ginum-low    = zspb2021-ginum_e.
    APPEND gr_ginum.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_STDAT_RANGE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_stdat_range CHANGING pv_subrc.
  DATA: lv_low   TYPE datum,
        lv_high  TYPE datum,
        lv_month TYPE n LENGTH 3.

  IF zspb2021-itype EQ 'P'.
    lv_low  = zspb2021-stdat_b.
    lv_high = zspb2021-stdat_e.

    CALL FUNCTION 'ZFMPB_CHECK_DATE'
      EXPORTING
        iv_low       = lv_low
        iv_high      = lv_high
      IMPORTING
        et_date      = gr_stdat
      EXCEPTIONS
        invalid_date = 1
        OTHERS       = 2.
    IF sy-subrc <> 0.
      MESSAGE '하한값이 상한값보다 클 수 없습니다.'(t08) TYPE 'I'.
      pv_subrc = 4.
      RETURN.
* Implement suitable error handling here
    ENDIF.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_PGIDT_RANGE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_pgidt_range CHANGING pv_subrc.
  DATA: lv_low  TYPE datum,
        lv_high TYPE datum.

  IF zspb2021-itype EQ 'R'.
    lv_low = zspb2021-pgidt_b.
    lv_high = zspb2021-pgidt_e.

    CALL FUNCTION 'ZFMPB_CHECK_DATE'
      EXPORTING
        iv_low       = lv_low
        iv_high      = lv_high
      IMPORTING
        et_date      = gr_pgidt
      EXCEPTIONS
        invalid_date = 1
        OTHERS       = 2.
    IF sy-subrc <> 0.
      MESSAGE '하한값이 상한값보다 클 수 없습니다.'(t08) TYPE 'I'.
      pv_subrc = 4.
      RETURN.
* Implement suitable error handling here
    ENDIF.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_IFLAG_RANGE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_iflag_range .
  CLEAR: gr_iflag[], gr_iflag.
  IF zspb2021-chk1 IS NOT INITIAL.
    gr_iflag-sign   = 'I'.
    gr_iflag-option = 'EQ'.
    gr_iflag-low    = ''. " 미생성
    APPEND gr_iflag.

  ENDIF.

  IF zspb2021-chk2 IS NOT INITIAL.
    gr_iflag-sign   = 'I'.
    gr_iflag-option = 'EQ'.
    gr_iflag-low    = gc_w. " 대기
    APPEND gr_iflag.

  ENDIF.

  IF zspb2021-chk3 IS NOT INITIAL.
    gr_iflag-sign   = 'I'.
    gr_iflag-option = 'EQ'.
    gr_iflag-low    = gc_x. " 승인
    APPEND gr_iflag.

  ENDIF.

  IF zspb2021-chk4 IS NOT INITIAL.
    gr_iflag-sign   = 'I'.
    gr_iflag-option = 'EQ'.
    gr_iflag-low    = gc_c. " 취소
    APPEND gr_iflag.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SELECT_GRGI
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM select_grgi CHANGING pv_subrc.
  " 검색조건 range
  PERFORM set_ranges CHANGING pv_subrc.
  IF pv_subrc IS NOT INITIAL.
    RETURN.

  ENDIF.

  CASE zspb2021-itype.
    WHEN gc_p.
      PERFORM select_grh_invh.

    WHEN gc_r.
      PERFORM select_gih_invh.

    WHEN OTHERS.
      PERFORM select_grh_gih_invh.

  ENDCASE.
  DELETE gt_list_h WHERE iflag NOT IN gr_iflag[].

  SORT gt_list_h BY
                    "stdat pgidt DESCENDING.
                    pdate DESCENDING.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SELECT_GRH_INVH
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM select_grh_invh .
  SELECT b~iflag,
         b~invno,
         b~itype,
         b~pdate,
         a~grnum,
         a~ponum,
         a~vendr,
         a~stdat,
         a~waers,
         a~pstat,
         a~descr
    FROM ztpbgrh AS a LEFT OUTER JOIN ztpbinvh AS b
                                   ON a~ponum  EQ b~ponum
                                  AND a~vendr  EQ b~vendr
                                  AND b~itype  EQ @gc_p
    INTO CORRESPONDING FIELDS OF TABLE @gt_list_h
   WHERE a~grnum IN @gr_grnum[]
     AND a~vendr IN @gr_vendr[]
     AND a~stdat IN @gr_stdat[].

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SELECT_GIH_INVH
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM select_gih_invh .
  SELECT b~iflag,
         b~invno,
         b~itype,
         b~pdate,
         a~ginum,
         a~sonum,
         a~cusnr,
         a~pgidt,
         a~waers,
         a~stats,
         a~descr
    FROM ztpbgih AS a LEFT OUTER JOIN ztpbinvh AS b
                                   ON a~sonum  EQ b~sonum
                                  AND a~cusnr  EQ b~cusnr
                                  AND b~itype  EQ @gc_r
    INTO CORRESPONDING FIELDS OF TABLE @gt_list_h
   WHERE a~ginum IN @gr_ginum[]
     AND a~cusnr IN @gr_custom[]
     AND a~pgidt IN @gr_pgidt[].

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SELECT_GRH_GIH_INVH
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM select_grh_gih_invh .
  " INVH와 GR GI 담음
  SELECT b~iflag,
         b~invno,
         b~itype,
         b~pdate,
         a~grnum,
         a~ponum,
         a~vendr,
         a~stdat,
         a~waers,
         a~pstat,
         a~descr
    FROM ztpbgrh AS a LEFT OUTER JOIN ztpbinvh AS b
                                   ON a~ponum  EQ b~ponum
    INTO CORRESPONDING FIELDS OF TABLE @gt_list_h
   WHERE a~grnum IN @gr_grnum[]
     AND a~vendr IN @gr_vendr[]
     AND a~stdat IN @gr_stdat[].

  SELECT b~iflag,
         b~invno,
         b~itype,
         b~pdate,
         a~ginum,
         a~sonum,
         a~cusnr,
         a~pgidt,
         a~waers,
         a~stats,
         a~descr
    FROM ztpbgih AS a LEFT OUTER JOIN ztpbinvh AS b
                                   ON a~sonum  EQ b~sonum
    APPENDING CORRESPONDING FIELDS OF TABLE @gt_list_h
   WHERE a~ginum IN @gr_ginum[]
     AND a~cusnr IN @gr_custom[]
     AND a~pgidt IN @gr_pgidt[].

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  MODIFY_LIST_PRICE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM modify_list_price .
  DATA: lt_po_i LIKE gt_list_i,
        lt_gr_i LIKE gt_list_i,
        lt_so_i LIKE gt_list_i,
        lt_gi_i LIKE gt_list_i.

  CASE zspb2021-itype.
    WHEN gc_p.
      PERFORM select_poi_by_grgi CHANGING lt_po_i
                                          lt_gr_i.
      PERFORM modify_price_po_gr CHANGING lt_po_i
                                          lt_gr_i.

    WHEN gc_r.
      PERFORM select_soi_by_grgi CHANGING lt_so_i
                                          lt_gi_i.
      PERFORM modify_price_so_gi CHANGING lt_so_i
                                          lt_gi_i.

    WHEN OTHERS.
      PERFORM select_poi_by_grgi CHANGING lt_po_i
                                          lt_gr_i.
      PERFORM modify_price_po_gr CHANGING lt_po_i
                                          lt_gr_i.
      PERFORM select_soi_by_grgi CHANGING lt_so_i
                                          lt_gi_i.
      PERFORM modify_price_so_gi CHANGING lt_so_i
                                          lt_gi_i.

  ENDCASE.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SELECT_POI_BY_GRGI
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM select_poi_by_grgi CHANGING pt_po_i LIKE gt_list_i
                                 pt_gr_i LIKE gt_list_i.
  " 앞서 select한 헤더 po번호를 가지고
  " po 아이템에서 select 및 삭제되지 않은거 select
  SELECT ponum
         itnum AS poitm
         pronr
         waers
         poqty
         punit
         price
         stats
         pflag
    INTO CORRESPONDING FIELDS OF TABLE pt_po_i
    FROM ztpbpoi
    FOR ALL ENTRIES IN gt_list_h
  WHERE ponum EQ gt_list_h-ponum
    AND pflag NE gc_x.

  " 앞서 select한 헤더 gr번호를 가지고
  " gr gi 엮어서 select 및 입고 승인된거 select
  SELECT a~grnum
         a~itnum AS poitm
         b~ponum
         a~pronr
         a~pgrqt AS poqty
         a~punit
         a~price
         a~waers
         a~pstat
    INTO CORRESPONDING FIELDS OF TABLE pt_gr_i
    FROM ztpbgri AS a INNER JOIN ztpbgrh AS b
                              ON a~grnum EQ b~grnum
    FOR ALL ENTRIES IN gt_list_h
  WHERE a~grnum EQ gt_list_h-grnum
    AND a~pstat EQ gc_c.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  MODIFY_PRICE_PO_GR
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM modify_price_po_gr CHANGING pt_po_i LIKE gt_list_i
                                 pt_gr_i LIKE gt_list_i.
  DATA: lv_h_price TYPE ztpbinvi-price, " 총금액
        lv_index   TYPE sy-tabix.       " 인덱스 체크
  DATA: ls_po_i LIKE LINE OF pt_po_i,
        ls_gr_i LIKE LINE OF pt_gr_i.

  " 앞서 select한 po아이템 gr아이템으로 헤더 테이블에 총금액 담기
  LOOP AT pt_po_i INTO ls_po_i.
    READ TABLE pt_gr_i INTO ls_gr_i WITH KEY poitm = ls_po_i-poitm
                                             ponum = ls_po_i-ponum.
    " po아이템 = po아이템 단가 * gr아이템 입고개수
    ls_po_i-tprice = ls_po_i-price * ls_gr_i-poqty.
    lv_h_price = lv_h_price + ls_po_i-tprice.
    MODIFY pt_po_i FROM ls_po_i.

    " 마지막 po번호 때 헤더 테이블에 누적합 금액 modify
    AT END OF ponum.
      READ TABLE gt_list_h INTO gs_list_h WITH KEY ponum = ls_po_i-ponum.
      IF sy-subrc EQ 0.
        lv_index = sy-tabix.
        gs_list_h-price = lv_h_price.
        MODIFY gt_list_h FROM gs_list_h INDEX lv_index.
      ENDIF.
      CLEAR lv_h_price.

    ENDAT.

  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SELECT_SOI_BY_GRGI
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM select_soi_by_grgi CHANGING pt_so_i LIKE gt_list_i
                                 pt_gi_i LIKE gt_list_i.
  " 앞서 select한 헤더 so번호를 가지고
  " so아이템에서 select 및 삭제되지 않은거 select
  SELECT sonum
         itnum AS soitm
         pronr
         waers
         soqty AS poqty
         punit
         price
         stats
         sstat
    INTO CORRESPONDING FIELDS OF TABLE pt_so_i
    FROM ztpbsoi
    FOR ALL ENTRIES IN gt_list_h
  WHERE sonum EQ gt_list_h-sonum
    AND pflag NE gc_x.

  " 앞서 select한 헤더 gi번호를 가지고
  " gr gi 엮어서 select 및 출고 승인된거 select
  SELECT a~pgino AS ginum
         a~itnum AS soitm
         b~sonum
         a~pronr
         a~pgiqt AS poqty
         a~punit
         a~price
         a~waers
         a~sstat
    INTO CORRESPONDING FIELDS OF TABLE pt_gi_i
    FROM ztpbgii AS a INNER JOIN ztpbgih AS b
                              ON a~pgino EQ b~ginum
    FOR ALL ENTRIES IN gt_list_h
  WHERE a~pgino EQ gt_list_h-ginum
    AND b~stats EQ gc_c.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  MODIFY_PRICE_SO_GI
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM modify_price_so_gi CHANGING pt_so_i LIKE gt_list_i
                                 pt_gi_i LIKE gt_list_i.
  DATA: lv_h_price TYPE ztpbinvi-price, " 총금액
        lv_index   TYPE sy-tabix. " 인덱스 체크
  DATA: ls_so_i LIKE LINE OF pt_so_i,
        ls_gi_i LIKE LINE OF pt_gi_i.

  " 앞서 select한 so아이템 gi아이템으로 헤더 테이블에 총금액 담기
  LOOP AT pt_so_i INTO ls_so_i.
    READ TABLE pt_gi_i INTO ls_gi_i WITH KEY soitm = ls_so_i-soitm
                                             sonum = ls_so_i-sonum.
    " so아이템 = so아이템 단가 * gi아이템 입고개수
    ls_so_i-tprice = ls_so_i-price * ls_gi_i-poqty.
    lv_h_price = lv_h_price + ls_so_i-tprice.
    MODIFY pt_so_i FROM ls_so_i.

    " 마지막 so번호 때 헤더 테이블에 누적합 금액 modify
    AT END OF sonum.
      READ TABLE gt_list_h INTO gs_list_h WITH KEY sonum = ls_so_i-sonum.
      IF sy-subrc EQ 0.
        lv_index = sy-tabix.
        gs_list_h-price = lv_h_price.
        MODIFY gt_list_h FROM gs_list_h INDEX lv_index.
      ENDIF.
      CLEAR lv_h_price.

    ENDAT.

  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  MODIFY_LIST
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM modify_list .
  DATA: lt_domain TYPE TABLE OF dd07v.   " 도메인
  DATA: lt_jchk TYPE TABLE OF ztpbjonlh. " 전표체크
  DATA: ls_jchk LIKE LINE OF lt_jchk.

  " 전표헤더에 있는 송장번호가 송장헤더에 송장번호랑 같으면
  SELECT refdo
    INTO CORRESPONDING FIELDS OF TABLE lt_jchk
    FROM ztpbjonlh
    FOR ALL ENTRIES IN gt_list_h
   WHERE refdo EQ gt_list_h-invno
     AND dtype EQ gc_iv. " IV

  LOOP AT gt_list_h INTO gs_list_h.
    " 전표 생성 여부
    READ TABLE lt_jchk INTO ls_jchk WITH KEY refdo = gs_list_h-invno.
    IF sy-subrc = 0.
      gs_list_h-jchck = gc_x.

    ENDIF.
    " 전표 생성 여부 표시
    PERFORM set_jchck.

    " 송장상태 신호등
    PERFORM set_iflag.

    " 주문 상태명
    PERFORM set_domain_pstat_and_stats.

    " 송장 타입명
    PERFORM set_domain_itype.

    " 공급업체명 납품업체명
    PERFORM set_text.

    MODIFY gt_list_h FROM gs_list_h.

  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_JCHCK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_jchck .
  CASE gs_list_h-jchck.
    WHEN gc_x.
      gs_list_h-jchck_t = gc_icon_checked. " 체크 표시

    WHEN space.
      gs_list_h-jchck_t = gc_icon_incomplete. " X 표시

    WHEN OTHERS.

  ENDCASE.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_IFLAG
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_iflag .
  CASE gs_list_h-iflag.
    WHEN space.

    WHEN gc_w.
      gs_list_h-light = '2'. " yellow

    WHEN gc_x.
      gs_list_h-light = '3'. " green

    WHEN gc_c.
      gs_list_h-light = '1'. " red

  ENDCASE.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_DOMAIN_PSTAT_AND_STATS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_domain_pstat_and_stats .
  DATA: ls_domain TYPE dd07v.
  " 주문 상태명
  READ TABLE gt_domain INTO ls_domain WITH KEY domname    = 'ZDPB_STATS'
                                               domvalue_l = gs_list_h-pstat.
  IF sy-subrc <> 0.
    PERFORM get_domain_values USING    'ZDPB_STATS'
                              CHANGING ls_domain.
  ENDIF.

  " 주문 상태명
  READ TABLE gt_domain INTO ls_domain WITH KEY domname    = 'ZDPB_STATS'
                                               domvalue_l = gs_list_h-pstat.
  IF sy-subrc = 0.
    gs_list_h-pstat_t = ls_domain-ddtext.

  ENDIF.

  " 주문 상태명
  READ TABLE gt_domain INTO ls_domain WITH KEY domname    = 'ZDPB_STATS'
                                               domvalue_l = gs_list_h-stats.
  IF sy-subrc = 0.
    gs_list_h-stats_t = ls_domain-ddtext.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_DOMAIN_VALUES
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_domain_values USING VALUE(p_domname) TYPE dd07l-domname
                          CHANGING ps_domain TYPE dd07v.
  DATA: lt_domain TYPE TABLE OF dd07v,
        ls_domain TYPE dd07v.

  CALL FUNCTION 'GET_DOMAIN_VALUES'
    EXPORTING
      domname         = p_domname
*     TEXT            = gc_x
*     FILL_DD07L_TAB  = ' '
    TABLES
      values_tab      = lt_domain
*     VALUES_DD07L    =
    EXCEPTIONS
      no_values_found = 1
      OTHERS          = 2.
  IF sy-subrc <> 0.
    MESSAGE a000(zmcpb) WITH 'GET_DOMAIN_VALUES'(t09).
    RETURN.

  ENDIF.

  LOOP AT lt_domain INTO ls_domain.
    APPEND ls_domain TO gt_domain.

  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_DOMAIN_ITYPE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_domain_itype.
  DATA: ls_domain TYPE dd07v.
  " 송장 타입명
  READ TABLE gt_domain INTO ls_domain WITH KEY domname    = 'ZDPB_ITYPE'
                                               domvalue_l = gs_list_h-itype.
  IF sy-subrc <> 0.
    PERFORM get_domain_values USING    'ZDPB_ITYPE'
                              CHANGING ls_domain.
  ENDIF.

  " 송장 타입명
  READ TABLE gt_domain INTO ls_domain WITH KEY domname    = 'ZDPB_ITYPE'
                                               domvalue_l = gs_list_h-itype.
  IF sy-subrc = 0.
    gs_list_h-itype_t = ls_domain-ddtext.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_TEXT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_text .
  " 공급업체명
  READ TABLE gt_vendor INTO DATA(ls_vendor) WITH KEY vendr = gs_list_h-vendr.
  IF  sy-subrc <> 0.
    SELECT SINGLE vendt
             FROM ztpbvendor
             INTO gs_list_h-vendt
            WHERE vendr EQ gs_list_h-vendr.

  ENDIF.

  " 납품업체명
  READ TABLE gt_custom INTO DATA(ls_custom) WITH KEY cusnr = gs_list_h-cusnr.
  IF  sy-subrc <> 0.
    SELECT SINGLE custt
             FROM ztpbcustom
             INTO gs_list_h-custt
            WHERE cusnr EQ gs_list_h-cusnr.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  MODIFY_GT_LIST_I
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM modify_gt_list_i  TABLES pt_list_i LIKE gt_list_i
                              pt_inv_i LIKE gt_list_i.
  DATA: ls_product_t LIKE LINE OF gt_product_t.
  DATA: ls_inv_i LIKE LINE OF pt_inv_i.

  LOOP AT pt_list_i ASSIGNING FIELD-SYMBOL(<lfs_list_i>).
    READ TABLE pt_inv_i INTO ls_inv_i WITH KEY invno = <lfs_list_i>-invno.
    IF sy-subrc = 0.
      IF ls_inv_i-ponum IS NOT INITIAL.
        <lfs_list_i>-grnum = ls_inv_i-grnum.
        <lfs_list_i>-ponum = ls_inv_i-ponum.
      ENDIF.

      IF ls_inv_i-sonum IS NOT INITIAL.
        <lfs_list_i>-ginum = ls_inv_i-ginum.
        <lfs_list_i>-sonum = ls_inv_i-sonum.
      ENDIF.

    ENDIF.

    PERFORM zfmpb_get_product_name USING    <lfs_list_i>-pronr
                                   CHANGING <lfs_list_i>-pname.

    <lfs_list_i>-tprice = <lfs_list_i>-price * <lfs_list_i>-poqty. " 금액(수량 * 단가)

  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  ZFMPB_GET_PRODUCT_NAME
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM zfmpb_get_product_name USING VALUE(p_pronr) TYPE ztpbproduct-pronr
                               CHANGING p_pname  TYPE ztpbproduct_t-pname.
  CALL FUNCTION 'ZFMPB_GET_PRODUCT_NAME'
    EXPORTING
      iv_pronr  = p_pronr
      iv_langu  = sy-langu
    IMPORTING
      ev_pronm  = p_pname
    EXCEPTIONS
      not_found = 1
      OTHERS    = 2.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  HANDLE_DOUBLE_CLICK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM handle_double_click USING ps_row    TYPE lvc_s_row
                                ps_column TYPE lvc_s_col
                                ps_row_no TYPE lvc_s_roid.
  DATA: lt_list_i LIKE gt_list_i.

  " 더블클릭한 행 가져와서
  READ TABLE gt_list_h INTO gs_list_h INDEX ps_row-index.
  IF sy-subrc <> 0.
    RETURN.

  ENDIF.
  " 더블클릭한 행이 송장번호가 아니고 값이 없으면 return
  IF ps_column NE 'INVNO' OR
     gs_list_h-invno IS INITIAL.
    RETURN.

  ENDIF.
  " INVH와 INVI 조인해서 아이템 -> ALV 아이템 테이블
  " 내가 이걸 왜 조인해서 가지고 왔지
  SELECT a~invno
         b~itnum
         b~poitm
         b~soitm
         b~pronr
         b~poqty
         b~punit
         b~price
         b~waers
    FROM ztpbinvh AS a INNER JOIN ztpbinvi AS b
                               ON a~invno  EQ b~invno
    INTO CORRESPONDING FIELDS OF TABLE gt_list_i
   WHERE a~invno EQ gs_list_h-invno.

  CASE gs_list_h-itype.
    WHEN gc_p.
      " 가져온 ALV 아이템 테이블에 대한 GR GI PO SO 등 가져옴
      SELECT a~invno
             a~vendr
             a~ponum
             b~grnum
        INTO CORRESPONDING FIELDS OF TABLE lt_list_i
        FROM ztpbinvh AS a INNER JOIN ztpbgrh AS b
                                   ON a~ponum EQ b~ponum
        FOR ALL ENTRIES IN gt_list_i
       WHERE a~invno EQ gt_list_i-invno.

    WHEN gc_r.
      SELECT a~invno
             a~cusnr
             a~sonum
             b~ginum
        INTO CORRESPONDING FIELDS OF TABLE lt_list_i
        FROM ztpbinvh AS a INNER JOIN ztpbgih AS b
                                   ON a~sonum EQ b~sonum
        FOR ALL ENTRIES IN gt_list_i
       WHERE a~invno EQ gt_list_i-invno.

  ENDCASE.

  " 두 테이블로 modify
  PERFORM modify_gt_list_i TABLES gt_list_i lt_list_i.

  CALL SCREEN 0110 STARTING AT 60 1 ENDING AT 180 10.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INSERT_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM insert_data .
  CLEAR gv_subrc.
  " 라인 선택 후 송장 생성
  PERFORM get_insert_row USING    '생성'(t09)
                         CHANGING zspb2013
                                  gv_subrc.
  IF gv_subrc IS NOT INITIAL.
    RETURN.

  ENDIF.

  " 송장 생성 -> 헤더 select
  PERFORM get_insert_info CHANGING zspb2013
                                   gv_subrc.

  CALL SCREEN 0200.

  " 송장 조회
  PERFORM search_data.

  IF gv_inv IS NOT INITIAL.
    READ TABLE gt_list_h INTO gs_list_h WITH KEY invno = gv_inv.
    IF sy-subrc = 0.
      gs_list_h-lcolor = 'C510'.
      MODIFY gt_list_h FROM gs_list_h INDEX sy-tabix.

    ENDIF.
  ENDIF.

  CLEAR: zspb2013, gt_display_item.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DETAIL_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM detail_data .
  CLEAR: zspb2017, gt_detail_i, gv_subrc.
  " 라인 선택 후 송장 선택
  PERFORM get_detail_row USING    '상세 조회'(t10)
                         CHANGING zspb2017
                                  gv_subrc.
  IF gv_subrc IS NOT INITIAL.
    RETURN.

  ENDIF.

  " 송장 상태명 / 타입명
  PERFORM modify_detail_list USING    zspb2017-iflag
                                      zspb2017-itype
                             CHANGING zspb2017-iflag_t
                                      zspb2017-itype_t.

  " 상품명
  LOOP AT gt_detail_i ASSIGNING FIELD-SYMBOL(<lfs_detail_i>).
    PERFORM zfmpb_get_product_name USING    <lfs_detail_i>-pronr
                                   CHANGING <lfs_detail_i>-pname.

  ENDLOOP.

  CALL SCREEN 0300.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_INSERT_ROW
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_insert_row USING VALUE(p_msg) TYPE string
                       CHANGING ps_list TYPE zspb2013
                                p_subrc.
  DATA: lt_row   TYPE lvc_t_row,
        ls_row   LIKE LINE OF lt_row,
        lv_lines TYPE i.

  CALL METHOD go_alv_0100->get_selected_rows
    IMPORTING
      et_index_rows = lt_row.

  DESCRIBE TABLE lt_row LINES lv_lines.

  IF lt_row IS INITIAL.
    MESSAGE i002(zmcpb) WITH p_msg. " & 할 라인을 선택하세요.
    p_subrc = 4.
    RETURN.

  ELSEIF lv_lines > 1.
    MESSAGE i004(zmcpb) WITH p_msg. " 한 건만 & 가능합니다.
    p_subrc = 4.
    RETURN.

  ENDIF.

  READ TABLE lt_row INTO ls_row INDEX 1.
  READ TABLE gt_list_h INTO gs_list_h INDEX ls_row-index.
  IF sy-subrc <> 0.
    RETURN.

  ENDIF.

  IF gs_list_h-jchck = gc_x .
    MESSAGE i006(zmcpb) WITH '전표가'(t11) '송장'(t06).
    p_subrc = 4.
    RETURN.

  ENDIF.

  IF gs_list_h-iflag = gc_c .
    MESSAGE i000(zmcpb) WITH '취소된 송장입니다.'(t12).
    p_subrc = 4.
    RETURN.

  ENDIF.

  IF gs_list_h-pstat = 'O' .
    MESSAGE i000(zmcpb) WITH '승인되지 않은 문서입니다.'(t15).
    p_subrc = 4.
    RETURN.

  ENDIF.

  IF gs_list_h-invno IS NOT INITIAL.
    MESSAGE i006(zmcpb) WITH '송장이'(t13) '문서'(t14).
    p_subrc = 4.
    RETURN.

  ENDIF.

*  IF gs_list_h-grnum IS NOT INITIAL.
*    IF gs_list_h-stdat > sy-datum.
*      MESSAGE i000(zmcpb) WITH '아직 입고되지 않은 문서입니다.'.
*      p_subrc = 4.
*      RETURN.
*
*    ENDIF.
*  ELSEIF gs_list_h-ginum IS NOT INITIAL.
*    IF gs_list_h-pgidt > sy-datum.
*      MESSAGE i000(zmcpb)
*      WITH '출고 완료된 건에 대해서만 송장이 생성 가능합니다. (출고일을 확인해주세요.)'.
*      p_subrc = 4.
*      RETURN.
*
*    ENDIF.
*
*  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_INSERT_INFO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_insert_info CHANGING ps_list TYPE zspb2013
                              p_subrc.
  IF gs_list_h-ponum IS NOT INITIAL.
    ps_list-itype = gc_p.
    SELECT SINGLE a~vendr
                  b~vendt
                  a~grnum
                  a~ponum
                  a~stdat
             FROM ztpbgrh AS a INNER JOIN ztpbvendor AS b
                                       ON a~vendr    EQ b~vendr
             INTO CORRESPONDING FIELDS OF ps_list
            WHERE a~grnum EQ gs_list_h-grnum.

  ELSEIF gs_list_h-sonum IS NOT INITIAL.
    ps_list-itype = gc_r.
    SELECT SINGLE a~cusnr
                  b~custt
                  a~ginum
                  a~sonum
                  a~pgidt
             FROM ztpbgih AS a INNER JOIN ztpbcustom AS b
                                       ON a~cusnr    EQ b~cusnr
             INTO CORRESPONDING FIELDS OF ps_list
            WHERE a~ginum EQ gs_list_h-ginum.

  ENDIF.

  READ TABLE gt_domain INTO DATA(ls_domain) WITH KEY domname    = 'ZDPB_IFLAG'
                                                     domvalue_l = ps_list-iflag.
  IF sy-subrc <> 0.
    PERFORM get_domain_values USING    'ZDPB_IFLAG'
                              CHANGING ls_domain.
  ENDIF.

  READ TABLE gt_domain INTO ls_domain WITH KEY domname    = 'ZDPB_IFLAG'
                                               domvalue_l = ps_list-iflag.
  IF sy-subrc = 0.
    ps_list-iflag_t = ls_domain-ddtext.

*    IF ps_list-itype = 'P'.
*      ps_list-pdate = ps_list-stdat.
*    ELSEIF ps_list-itype = 'R'.
*      ps_list-pdate = ps_list-pgidt.
*    ENDIF.

    ps_list-pdate   = '20251020'. " sy-datum.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  ITEM_IN
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM insert_item .
  CASE zspb2013-itype.
    WHEN gc_p.
      PERFORM select_item_p.

    WHEN gc_r.
      PERFORM select_item_r.

  ENDCASE.

  SORT gt_display_item BY itnum.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  ITEM_DE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM delete_item USING VALUE(p_msg)  TYPE string
                    CHANGING pt_delete LIKE gt_display_item
                             p_subrc.
  DATA: lt_row   TYPE lvc_t_row,
        ls_row   LIKE LINE OF lt_row,
        lv_lines TYPE i.
  DATA: ls_delete LIKE LINE OF gt_display_item.

  CALL METHOD go_alv_0200->get_selected_rows
    IMPORTING
      et_index_rows = lt_row.

  DESCRIBE TABLE lt_row LINES lv_lines.

  IF lt_row IS INITIAL.
    MESSAGE i002(zmcpb) WITH p_msg. " & 할 라인을 선택하세요.
    p_subrc = 4.
    RETURN.

  ENDIF.

  " 1번부터 삭제하니까 2번 루프때 2,3중에 3을 2번 루프로 판단..
  SORT lt_row BY index DESCENDING.

  LOOP AT lt_row INTO ls_row.
    READ TABLE pt_delete INTO ls_delete INDEX ls_row-index.
    IF sy-subrc = 0.
      DELETE pt_delete WHERE itnum = ls_delete-itnum. " INDEX ls_row-index.

    ENDIF.

  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  IV_INSERT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM insert_inv .
  CLEAR gv_subrc.
  " POPUP_TO_CONFIRM (송장을 생성하시겠습니까?)
  PERFORM insert_check CHANGING gv_subrc.
  IF gv_subrc IS NOT INITIAL.
    RETURN.

  ENDIF.

  " 송장 입력 체크
  PERFORM check_inv_data CHANGING gv_subrc.
  IF gv_subrc IS NOT INITIAL.
    RETURN.

  ENDIF.

  " 송장 생성
  PERFORM insert_inv_data.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SELECT_ITEM_P
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM select_item_p .
  DATA: lt_gr_i TYPE TABLE OF zspb2014,
        ls_gr_i LIKE LINE OF lt_gr_i.
  DATA: lv_itnum TYPE i VALUE 0.

  CLEAR gt_display_item.
  " 입고 아이템 조회
  SELECT itnum AS poitm
         pronr
         pgrqt
         punit
         price
         waers
    FROM ztpbgri
    INTO CORRESPONDING FIELDS OF TABLE lt_gr_i
   WHERE grnum EQ zspb2013-grnum.

  CLEAR: lv_itnum.
  LOOP AT lt_gr_i INTO ls_gr_i.
    READ TABLE gt_display_item WITH KEY poitm = ls_gr_i-poitm
                               TRANSPORTING NO FIELDS.
    IF sy-subrc <> 0.
      ADD 1 TO lv_itnum.
      ls_gr_i-itnum = lv_itnum.
      " 상품명
      PERFORM zfmpb_get_product_name USING    ls_gr_i-pronr
                                     CHANGING ls_gr_i-pname.
      " 총금액
      ls_gr_i-tprice = ls_gr_i-price * ls_gr_i-pgrqt.
      CLEAR gs_display_item.
      MOVE-CORRESPONDING ls_gr_i TO gs_display_item.
      APPEND gs_display_item TO gt_display_item.

    ENDIF.

  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SELECT_ITEM_R
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM select_item_r .
  DATA: lt_gi_i TYPE TABLE OF zspb2014,
        ls_gi_i LIKE LINE OF lt_gi_i.
  DATA: lv_itnum TYPE i VALUE 0.

  CLEAR gt_display_item.
  " 출고 아이템 조회
  SELECT itnum AS soitm
         pronr
         pgiqt AS pgrqt
         punit
         price
         waers
    FROM ztpbgii
    INTO CORRESPONDING FIELDS OF TABLE lt_gi_i
   WHERE pgino EQ zspb2013-ginum.

  CLEAR lv_itnum.
  " 출고 아이템 LOOP
  LOOP AT lt_gi_i INTO ls_gi_i.
    READ TABLE gt_display_item WITH KEY soitm = ls_gi_i-soitm
                               TRANSPORTING NO FIELDS.
    IF sy-subrc <> 0.
      ADD 1 TO lv_itnum.
      ls_gi_i-itnum = lv_itnum.
      " 상품명
      PERFORM zfmpb_get_product_name USING    ls_gi_i-pronr
                                     CHANGING ls_gi_i-pname.
      " 총금액
      ls_gi_i-tprice = ls_gi_i-price * ls_gi_i-pgrqt.
      CLEAR gs_display_item.
      MOVE-CORRESPONDING ls_gi_i TO gs_display_item.
      APPEND gs_display_item TO gt_display_item.

    ENDIF.

  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_DETAIL_ROW
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_detail_row USING VALUE(p_msg)  TYPE string
                       CHANGING ps_list TYPE zspb2017
                                p_subrc.
  DATA: lt_row   TYPE lvc_t_row,
        ls_row   LIKE LINE OF lt_row,
        lv_lines TYPE i.

  CALL METHOD go_alv_0100->get_selected_rows
    IMPORTING
      et_index_rows = lt_row.

  IF lt_row IS INITIAL.
    MESSAGE i002(zmcpb) WITH p_msg. " & 할 라인을 선택하세요.
    p_subrc = 4.
    RETURN.

  ENDIF.

  DESCRIBE TABLE lt_row LINES lv_lines.

  IF lv_lines > 1.
    MESSAGE i004(zmcpb) WITH p_msg. " 한 건만 & 가능합니다.
    p_subrc = 4.
    RETURN.

  ENDIF.

  READ TABLE lt_row INTO ls_row INDEX 1.
  READ TABLE gt_list_h INTO gs_list_h INDEX ls_row-index.

  " 헤더
  PERFORM select_inv_h USING    gs_list_h-invno
                       CHANGING ps_list.

  IF ps_list-invno IS INITIAL.
    MESSAGE i008(zmcpb) WITH '송장'(t06).
    p_subrc = 4.
    RETURN.

  ENDIF.

  " 아이템
  PERFORM select_inv_i USING gs_list_h-invno.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INSERT_INV_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM check_inv_data CHANGING pv_subrc.
  DATA: lv_pdate  TYPE sy-datum.
  DATA: ls_inv_check TYPE ztpbinvh.

  CLEAR pv_subrc.
  " 송장 날짜 체크
*  PERFORM check_pdate CHANGING lv_pdate pv_subrc.
*  IF pv_subrc IS NOT INITIAL.
*    RETURN.
*
*  ENDIF.

  CLEAR pv_subrc.
  " 송장 아이템 체크
  PERFORM check_item USING    zspb2013-itype
                     CHANGING pv_subrc.
  IF pv_subrc IS NOT INITIAL.
    RETURN.

  ENDIF.

  CLEAR pv_subrc.
  " 송장 중복 체크
  PERFORM check_inv USING    zspb2013-itype
                    CHANGING ls_inv_check.

  IF ls_inv_check IS NOT INITIAL.
    "& 이미 존재하는 & 입니다.
    MESSAGE i006(zmcpb) WITH '해당 주문번호의 송장은' '송장'.
    pv_subrc = 4.
    RETURN.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_INVNO_BY_NUMBER_RANGE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_invno_by_number_range  CHANGING p_num TYPE numc04.
  CALL FUNCTION 'NUMBER_GET_NEXT'
    EXPORTING
      nr_range_nr             = '01'
      object                  = 'ZNRPB2000T'
*     QUANTITY                = '1'
*     SUBOBJECT               = ' '
      toyear                  = sy-datum+0(4)
*     IGNORE_BUFFER           = ' '
    IMPORTING
      number                  = p_num
*     QUANTITY                =
*     RETURNCODE              =
    EXCEPTIONS
      interval_not_found      = 1
      number_range_not_intern = 2
      object_not_found        = 3
      quantity_is_0           = 4
      quantity_is_not_1       = 5
      interval_overflow       = 6
      buffer_overflow         = 7
      OTHERS                  = 8.
  IF sy-subrc <> 0.
    MESSAGE '송장번호 생성 실패. 관리자에게 문의하세요.' TYPE 'I'.
    p_num = '0000'.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CHECK_INV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM check_inv USING VALUE(pv_itype) TYPE zspb2013-itype
                  CHANGING ps_inv_check TYPE ztpbinvh.
  IF pv_itype = gc_p.
    SELECT SINGLE *
             FROM ztpbinvh
             INTO CORRESPONDING FIELDS OF ps_inv_check
            WHERE vendr EQ zspb2013-vendr
              AND ponum EQ zspb2013-ponum
              AND iflag NE gc_c.

  ELSEIF pv_itype = gc_r.
    SELECT SINGLE *
             FROM ztpbinvh
             INTO CORRESPONDING FIELDS OF ps_inv_check
            WHERE cusnr EQ zspb2013-cusnr
              AND sonum EQ zspb2013-sonum
              AND iflag NE gc_c.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CHECK_PDATE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM check_pdate CHANGING pv_pdate TYPE sy-datum
                          pv_subrc.
  pv_pdate = sy-datum.
  " 송장등록일 체크
  IF zspb2013-pdate > pv_pdate.
    MESSAGE TEXT-t22 TYPE 'I'. " 송장등록일을 체크해주세요. (오늘 혹은 이전만 가능)
    pv_subrc = 4.
    RETURN.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INSERT_DB
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM insert_db USING VALUE(pv_num) TYPE numc04.
  DATA: ls_header TYPE ztpbinvh,
        ls_item   TYPE ztpbinvi.

  MOVE-CORRESPONDING zspb2013 TO ls_header.
  ls_header-invno = gc_iv && sy-datum+0(4) && pv_num.
  ls_header-iflag = gc_w.
  " DB INSERT(헤더)
  INSERT INTO ztpbinvh VALUES ls_header.
  IF sy-subrc <> 0.
    MESSAGE i018(zmcpb). " 저장실패
    RETURN.

  ENDIF.

  LOOP AT gt_display_item INTO gs_display_item.
    CLEAR ls_item.
    MOVE-CORRESPONDING gs_display_item TO ls_item.
    ls_item-invno = ls_header-invno.
    ls_item-poqty = gs_display_item-pgrqt.
    " DB INSERT(아이템)
    INSERT INTO ztpbinvi VALUES ls_item.
    IF sy-subrc <> 0.
      MESSAGE i018(zmcpb). " 저장실패
      ROLLBACK WORK.
      RETURN.

    ENDIF.

  ENDLOOP.

  COMMIT WORK.

  gv_inv = ls_header-invno.
  MESSAGE i013(zmcpb) WITH '송장'.

  LEAVE TO SCREEN 0.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INSERT_INV_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM insert_inv_data .
  DATA: lv_invno  TYPE ztpbinvh-invno,
        lv_num(4) TYPE n.
  " 송장 Number Range
  PERFORM get_invno_by_number_range CHANGING lv_num.

  " 송장 등록
  PERFORM insert_db USING lv_num.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  INSERT_CHECK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM insert_check CHANGING pv_subrc.
  DATA: lv_answer TYPE n.

  CALL FUNCTION 'POPUP_TO_CONFIRM'
    EXPORTING
      titlebar       = '송장 생성'
      text_question  = '송장을 생성하시겠습니까?'
      text_button_1  = '예'
      text_button_2  = '아니요'
    IMPORTING
      answer         = lv_answer
    EXCEPTIONS
      text_not_found = 1
      OTHERS         = 2.
  IF lv_answer NE '1'.
    pv_subrc = 4.

  ENDIF.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SELECT_INV_H_P
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM select_inv_h_p USING VALUE(pv_invno) TYPE zspb2017-invno
                       CHANGING ps_list   TYPE zspb2017.
  DATA: lt_list TYPE TABLE OF zspb2017.

*  SELECT SINGLE a~invno,
  SELECT a~invno,
         a~vendr,
         a~ponum,
         a~iflag,
         a~itype,
         a~pdate,
         b~grnum,
         b~waers,
         b~descr,
         SUM( poqty * price ) AS tprice,
         d~vendt
    FROM ztpbinvh AS a INNER JOIN ztpbgrh    AS b
                               ON a~ponum    EQ b~ponum
                       INNER JOIN ztpbinvi   AS c
                               ON a~invno    EQ c~invno
                       INNER JOIN ztpbvendor AS d
                               ON a~vendr    EQ d~vendr
    INTO CORRESPONDING FIELDS OF TABLE @lt_list " @ps_list
   WHERE a~invno EQ @pv_invno
   GROUP BY a~invno, a~vendr, a~ponum, a~iflag, a~itype,
            a~pdate, b~grnum, b~waers, b~descr, d~vendt.

  READ TABLE lt_list INTO ps_list WITH KEY invno = pv_invno.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SELECT_INV_H_R
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM select_inv_h_r  USING VALUE(pv_invno) TYPE zspb2017-invno
                        CHANGING ps_list   TYPE zspb2017.
  DATA: lt_list TYPE TABLE OF zspb2017.

*  SELECT SINGLE a~invno,
  SELECT a~invno,
         a~cusnr,
         a~sonum,
         a~iflag,
         a~itype,
         a~pdate,
         b~ginum,
         b~waers,
         b~descr,
         SUM( poqty * price ) AS tprice,
         d~custt
    FROM ztpbinvh AS a INNER JOIN ztpbgih    AS b
                               ON a~sonum    EQ b~sonum
                       INNER JOIN ztpbinvi   AS c
                               ON a~invno    EQ c~invno
                       INNER JOIN ztpbcustom AS d
                               ON a~cusnr    EQ d~cusnr
    INTO CORRESPONDING FIELDS OF TABLE @lt_list " @ps_list
   WHERE a~invno EQ @pv_invno
   GROUP BY a~invno, a~cusnr, a~sonum, a~iflag, a~itype,
            a~pdate, b~ginum, b~waers, b~descr, d~custt.

  READ TABLE lt_list INTO ps_list WITH KEY invno = pv_invno.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SELECT_INV_I
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM select_inv_i USING VALUE(pv_invno) TYPE zspb2017-invno.
  " 아이템
  SELECT invno,
         itnum,
         poitm,
         soitm,
         pronr,
         poqty,
         punit,
         price,
         waers,
         ( poqty * price ) AS tprice
    FROM ztpbinvi
    INTO CORRESPONDING FIELDS OF TABLE @gt_detail_i
   WHERE invno EQ @pv_invno.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FIELDCAT_H
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_fieldcat_h CHANGING pt_fcat  TYPE lvc_t_fcat.
  DATA: ls_fcat TYPE lvc_s_fcat.

  ls_fcat-fieldname = gc_light.
  ls_fcat-coltext   = '송장상태'(f20).
  INSERT ls_fcat INTO pt_fcat INDEX 1.
  CLEAR ls_fcat.
  CASE zspb2021-itype.
    WHEN gc_p.
      LOOP AT pt_fcat ASSIGNING FIELD-SYMBOL(<lfs_fcat>)."INTO ls_fcat.
        CASE <lfs_fcat>-fieldname.
          WHEN 'IFLAG'.
            <lfs_fcat>-col_pos  = '2'.
            <lfs_fcat>-no_out   = gc_x.
          WHEN 'IFLAG_T'.
            <lfs_fcat>-col_pos  = '3'.
            <lfs_fcat>-no_out   = gc_x.
          WHEN 'JCHCK'.
            <lfs_fcat>-col_pos  = '4'.
            <lfs_fcat>-no_out   = gc_x.
          WHEN 'ITYPE'.
            <lfs_fcat>-col_pos  = '5'.
            <lfs_fcat>-no_out   = gc_x.
          WHEN 'ITYPE_T'.
            <lfs_fcat>-coltext  = '거래유형'(f01).
            <lfs_fcat>-col_pos  = '6'.
            <lfs_fcat>-just     = gc_c.
          WHEN 'PDATE'.
            <lfs_fcat>-coltext  = '송장생성일'(f02).
            <lfs_fcat>-col_pos  = '7'.
          WHEN 'INVNO'.
            <lfs_fcat>-col_pos  = '8'.
            <lfs_fcat>-key      = gc_x.
            <lfs_fcat>-coltext  = '송장번호(더블클릭)'(f03).
            <lfs_fcat>-tooltip  = '송장번호(더블클릭)'(f03).
          WHEN 'VENDR'.
            <lfs_fcat>-coltext  = '공급업체번호'(f04).
            <lfs_fcat>-col_pos  = '9'.
          WHEN 'VENDT'.
            <lfs_fcat>-coltext  = '공급업체'(f05).
            <lfs_fcat>-col_pos  = '10'.
          WHEN 'GRNUM'.
            <lfs_fcat>-col_pos  = '11'.
            <lfs_fcat>-hotspot  = gc_x.
          WHEN 'STDAT'.
            <lfs_fcat>-col_pos  = '12'.
          WHEN 'PSTAT'.
            <lfs_fcat>-col_pos  = '13'.
            <lfs_fcat>-no_out   = gc_x.
          WHEN 'PSTAT_T'.
            <lfs_fcat>-coltext  = '입고상태'(f06).
            <lfs_fcat>-col_pos  = '14'.
          WHEN 'PONUM'.
            <lfs_fcat>-col_pos  = '15'.
            <lfs_fcat>-hotspot  = gc_x.

          WHEN 'CUSNR'.
*        <lfs_fcat>-col_pos  = '16'.
            <lfs_fcat>-no_out   = gc_x.
          WHEN 'CUSTT'.
            <lfs_fcat>-col_pos  = '17'.
            <lfs_fcat>-no_out   = gc_x.
          WHEN 'GINUM'.
*        <lfs_fcat>-col_pos  = '18'.
            <lfs_fcat>-no_out   = gc_x.
          WHEN 'PGIDT'.
*        <lfs_fcat>-col_pos  = '19'.
            <lfs_fcat>-no_out   = gc_x.
          WHEN 'STATS'.
*        <lfs_fcat>-col_pos  = '20'.
            <lfs_fcat>-no_out   = gc_x.
          WHEN 'STATS_T'.
*        <lfs_fcat>-col_pos  = '21'.
            <lfs_fcat>-no_out   = gc_x.
          WHEN 'SONUM'.
*        <lfs_fcat>-col_pos  = '22'.
            <lfs_fcat>-no_out   = gc_x.
          WHEN 'PRICE'.
            <lfs_fcat>-coltext  = '총금액'(f07).
            <lfs_fcat>-col_pos  = '23'.
          WHEN 'WAERS'.
            <lfs_fcat>-coltext  = '통화단위'(f08).
            <lfs_fcat>-col_pos  = '24'.
          WHEN 'DESCR'.
            <lfs_fcat>-col_pos  = '25'.
          WHEN 'JCHCK_T'.
            <lfs_fcat>-coltext  = '전표 여부'(f09).
            <lfs_fcat>-col_pos  = '26'.
            <lfs_fcat>-just     = gc_c.
        ENDCASE.

      ENDLOOP.
    WHEN gc_r.
      LOOP AT pt_fcat ASSIGNING <lfs_fcat>."INTO ls_fcat.
        CASE <lfs_fcat>-fieldname.
          WHEN 'IFLAG'.
            <lfs_fcat>-col_pos  = '2'.
            <lfs_fcat>-no_out   = gc_x.
          WHEN 'IFLAG_T'.
            <lfs_fcat>-col_pos  = '3'.
            <lfs_fcat>-no_out   = gc_x.
          WHEN 'JCHCK'.
            <lfs_fcat>-col_pos  = '4'.
            <lfs_fcat>-no_out   = gc_x.
          WHEN 'ITYPE'.
            <lfs_fcat>-col_pos  = '5'.
            <lfs_fcat>-no_out   = gc_x.
          WHEN 'ITYPE_T'.
            <lfs_fcat>-coltext  = '거래유형'(f01).
            <lfs_fcat>-col_pos  = '6'.
            <lfs_fcat>-just     = gc_c.
          WHEN 'PDATE'.
            <lfs_fcat>-coltext  = '송장생성일'(f02).
            <lfs_fcat>-col_pos  = '7'.
          WHEN 'INVNO'.
            <lfs_fcat>-col_pos  = '8'.
            <lfs_fcat>-key      = gc_x.
            <lfs_fcat>-coltext  = '송장번호(더블클릭)'(f03).
            <lfs_fcat>-tooltip  = '송장번호(더블클릭)'(f03).
          WHEN 'VENDR'.
            <lfs_fcat>-col_pos  = '9'.
            <lfs_fcat>-no_out   = gc_x.
          WHEN 'VENDT'.
            <lfs_fcat>-col_pos  = '10'.
            <lfs_fcat>-no_out   = gc_x.
          WHEN 'GRNUM'.
            <lfs_fcat>-col_pos  = '11'.
            <lfs_fcat>-no_out   = gc_x.
          WHEN 'STDAT'.
            <lfs_fcat>-col_pos  = '12'.
            <lfs_fcat>-no_out   = gc_x.
          WHEN 'PSTAT'.
            <lfs_fcat>-col_pos  = '13'.
            <lfs_fcat>-no_out   = gc_x.
          WHEN 'PSTAT_T'.
            <lfs_fcat>-col_pos  = '14'.
            <lfs_fcat>-no_out   = gc_x.
          WHEN 'PONUM'.
            <lfs_fcat>-col_pos  = '15'.
            <lfs_fcat>-no_out   = gc_x.

          WHEN 'CUSNR'.
            <lfs_fcat>-coltext  = '납품업체번호'(f10).
            <lfs_fcat>-col_pos  = '16'.
          WHEN 'CUSTT'.
            <lfs_fcat>-coltext  = '납품업체'(f11).
            <lfs_fcat>-col_pos  = '17'.
          WHEN 'GINUM'.
            <lfs_fcat>-col_pos  = '18'.
            <lfs_fcat>-hotspot  = gc_x.
          WHEN 'PGIDT'.
            <lfs_fcat>-col_pos  = '19'.
          WHEN 'STATS'.
            <lfs_fcat>-col_pos  = '20'.
            <lfs_fcat>-no_out   = gc_x.
          WHEN 'STATS_T'.
            <lfs_fcat>-coltext  = '출고상태'(f12).
            <lfs_fcat>-col_pos  = '21'.
          WHEN 'SONUM'.
            <lfs_fcat>-col_pos  = '22'.
            <lfs_fcat>-hotspot  = gc_x.
          WHEN 'PRICE'.
            <lfs_fcat>-coltext  = '총금액'(f07).
            <lfs_fcat>-col_pos  = '23'.
          WHEN 'WAERS'.
            <lfs_fcat>-coltext  = '통화단위'(f08).
            <lfs_fcat>-col_pos  = '24'.
          WHEN 'DESCR'.
            <lfs_fcat>-col_pos  = '25'.
          WHEN 'JCHCK_T'.
            <lfs_fcat>-coltext  = '전표 여부'(f09).
            <lfs_fcat>-col_pos  = '26'.
            <lfs_fcat>-just     = gc_c.
        ENDCASE.

      ENDLOOP.
    WHEN OTHERS.
      LOOP AT pt_fcat ASSIGNING <lfs_fcat>.
        CASE <lfs_fcat>-fieldname.
          WHEN 'IFLAG'.
            <lfs_fcat>-col_pos  = '2'.
            <lfs_fcat>-no_out   = gc_x.
          WHEN 'IFLAG_T'.
            <lfs_fcat>-col_pos  = '3'.
            <lfs_fcat>-no_out   = gc_x.
          WHEN 'JCHCK'.
            <lfs_fcat>-col_pos  = '4'.
            <lfs_fcat>-no_out   = gc_x.
          WHEN 'ITYPE'.
            <lfs_fcat>-col_pos  = '5'.
            <lfs_fcat>-no_out   = gc_x.
          WHEN 'ITYPE_T'.
            <lfs_fcat>-coltext  = '거래유형'(f01).
            <lfs_fcat>-col_pos  = '6'.
            <lfs_fcat>-just     = gc_c.
          WHEN 'PDATE'.
            <lfs_fcat>-coltext  = '송장생성일'(f02).
            <lfs_fcat>-col_pos  = '7'.
          WHEN 'INVNO'.
            <lfs_fcat>-col_pos  = '8'.
            <lfs_fcat>-key      = gc_x.
            <lfs_fcat>-coltext  = '송장번호(더블클릭)'(f03).
            <lfs_fcat>-tooltip  = '송장번호(더블클릭)'(f03).
          WHEN 'VENDR'.
            <lfs_fcat>-coltext  = '공급업체번호'(f04).
            <lfs_fcat>-col_pos  = '9'.
          WHEN 'VENDT'.
            <lfs_fcat>-coltext  = '공급업체'(f05).
            <lfs_fcat>-col_pos  = '10'.
          WHEN 'GRNUM'.
            <lfs_fcat>-col_pos  = '11'.
            <lfs_fcat>-hotspot  = gc_x.
          WHEN 'STDAT'.
            <lfs_fcat>-col_pos  = '12'.
          WHEN 'PSTAT'.
            <lfs_fcat>-col_pos  = '13'.
            <lfs_fcat>-no_out   = gc_x.
          WHEN 'PSTAT_T'.
            <lfs_fcat>-coltext  = '입고상태'(f06).
            <lfs_fcat>-col_pos  = '14'.
          WHEN 'PONUM'.
            <lfs_fcat>-col_pos  = '15'.
            <lfs_fcat>-hotspot  = gc_x.

          WHEN 'CUSNR'.
            <lfs_fcat>-coltext  = '납품업체번호'(f10).
            <lfs_fcat>-col_pos  = '16'.
          WHEN 'CUSTT'.
            <lfs_fcat>-coltext  = '납품업체'(f11).
            <lfs_fcat>-col_pos  = '17'.
          WHEN 'GINUM'.
            <lfs_fcat>-col_pos  = '18'.
            <lfs_fcat>-hotspot  = gc_x.
          WHEN 'PGIDT'.
            <lfs_fcat>-col_pos  = '19'.
          WHEN 'STATS'.
            <lfs_fcat>-col_pos  = '20'.
            <lfs_fcat>-no_out   = gc_x.
          WHEN 'STATS_T'.
            <lfs_fcat>-coltext  = '출고상태'(f12).
            <lfs_fcat>-col_pos  = '21'.
          WHEN 'SONUM'.
            <lfs_fcat>-col_pos  = '22'.
            <lfs_fcat>-hotspot  = gc_x.
          WHEN 'PRICE'.
            <lfs_fcat>-coltext  = '총금액'(f07).
            <lfs_fcat>-col_pos  = '23'.
          WHEN 'WAERS'.
            <lfs_fcat>-coltext  = '통화단위'(f08).
            <lfs_fcat>-col_pos  = '24'.
          WHEN 'DESCR'.
            <lfs_fcat>-col_pos  = '25'.
          WHEN 'JCHCK_T'.
            <lfs_fcat>-coltext  = '전표 여부'(f09).
            <lfs_fcat>-col_pos  = '26'.
            <lfs_fcat>-just     = gc_c.
        ENDCASE.

      ENDLOOP.

  ENDCASE.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FIELDCAT_I
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_fieldcat_popup CHANGING pt_fcat  TYPE lvc_t_fcat.
  DATA: ls_fcat TYPE lvc_s_fcat.

  CASE gs_list_h-itype.
    WHEN gc_p.
      LOOP AT pt_fcat ASSIGNING FIELD-SYMBOL(<lfs_fcat>).
        CASE <lfs_fcat>-fieldname.
          WHEN 'INVNO'.
            <lfs_fcat>-col_pos   = '1'.
          WHEN 'GRNUM'.
            <lfs_fcat>-col_pos   = '2'.
          WHEN 'GINUM'.
            <lfs_fcat>-no_out    = gc_x.
          WHEN 'PONUM'.
            <lfs_fcat>-col_pos   = '3'.
          WHEN 'SONUM'.
            <lfs_fcat>-no_out    = gc_x.
          WHEN 'ITNUM'.
            <lfs_fcat>-coltext   = '송장 아이템 번호'(f13).
            <lfs_fcat>-col_pos   = '5'.
          WHEN 'POITM'.
            <lfs_fcat>-coltext   = '구매오더 아이템 번호'(f14).
          WHEN 'SOITM'.
            <lfs_fcat>-no_out    = gc_x.
          WHEN 'POQTY'.
            <lfs_fcat>-coltext   = '입고수량'(f15).
          WHEN 'PRICE'.
            <lfs_fcat>-coltext   = '단가'(f16).
          WHEN 'TPRICE'.
            <lfs_fcat>-outputlen = '10'.
            <lfs_fcat>-emphasize = gc_x.
            <lfs_fcat>-key       = gc_x.
            <lfs_fcat>-do_sum    = gc_x.
          WHEN 'WAERS'.
            <lfs_fcat>-coltext   = '통화단위'(f08).

        ENDCASE.

      ENDLOOP.

    WHEN gc_r.
      LOOP AT pt_fcat ASSIGNING <lfs_fcat>.
        CASE <lfs_fcat>-fieldname.
          WHEN 'INVNO'.
            <lfs_fcat>-col_pos   = '1'.
          WHEN 'GRNUM'.
            <lfs_fcat>-no_out    = gc_x.
          WHEN 'GINUM'.
            <lfs_fcat>-col_pos   = '2'.
          WHEN 'PONUM'.
            <lfs_fcat>-no_out    = gc_x.
          WHEN 'SONUM'.
            <lfs_fcat>-col_pos   = '3'.
          WHEN 'ITNUM'.
            <lfs_fcat>-coltext   = '송장 아이템 번호'(f13).
            <lfs_fcat>-col_pos   = '5'.
          WHEN 'POITM'.
            <lfs_fcat>-no_out    = gc_x.
          WHEN 'SOITM'.
            <lfs_fcat>-coltext   = '판매오더 아이템 번호'(f17).
          WHEN 'POQTY'. "
            <lfs_fcat>-coltext   = '출고수량'(f18).
          WHEN 'PRICE'.
            <lfs_fcat>-coltext   = '단가'(f16).
          WHEN 'TPRICE'.
            <lfs_fcat>-outputlen = '10'.
            <lfs_fcat>-emphasize = gc_x.
            <lfs_fcat>-key       = gc_x.
            <lfs_fcat>-do_sum    = gc_x.
          WHEN 'WAERS'.
            <lfs_fcat>-coltext   = '통화단위'(f08).

        ENDCASE.

      ENDLOOP.

  ENDCASE.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  HOTSPOT_CLICK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM hotspot_click USING ps_row_id    TYPE lvc_s_row
                         ps_column_id TYPE lvc_s_col
                         ps_row_no    TYPE lvc_s_roid.

  READ TABLE gt_list_h INTO gs_list_h INDEX ps_row_id.
  IF sy-subrc <> 0.
    RETURN.

  ENDIF.

  CASE ps_column_id.
    WHEN 'GRNUM'.
      IF gs_list_h-grnum IS NOT INITIAL.
        SET PARAMETER ID 'ZPB4050CD' FIELD gs_list_h-grnum.
        CALL TRANSACTION 'ZPB4050CD' AND SKIP FIRST SCREEN.

      ENDIF.

    WHEN 'GINUM'.
      IF gs_list_h-ginum IS NOT INITIAL.
        SET PARAMETER ID 'ZPB4010D' FIELD gs_list_h-ginum.
        CALL TRANSACTION 'ZPB4010D' AND SKIP FIRST SCREEN.

      ENDIF.

    WHEN 'PONUM'.
      IF gs_list_h-ponum IS NOT INITIAL.
        SET PARAMETER ID 'ZPB2050CD' FIELD gs_list_h-ponum.
        CALL TRANSACTION 'ZPB2050CD' AND SKIP FIRST SCREEN.

      ENDIF.

    WHEN 'SONUM'.
      IF gs_list_h-sonum IS NOT INITIAL.
        SET PARAMETER ID 'ZPB2010D' FIELD gs_list_h-sonum.
        CALL TRANSACTION 'ZPB2010D' AND SKIP FIRST SCREEN.

      ENDIF.

  ENDCASE.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT_DETAIL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_fcat_detail USING VALUE(p_sname) TYPE dd02l-tabname
                   CHANGING pt_fcat TYPE lvc_t_fcat.
  CLEAR pt_fcat.
  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      i_structure_name = p_sname
    CHANGING
      ct_fieldcat      = pt_fcat.

  PERFORM set_fieldcat_detail CHANGING pt_fcat.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FIELDCAT_DETAIL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_fieldcat_detail CHANGING pt_fcat  TYPE lvc_t_fcat.
  DATA: ls_fcat TYPE lvc_s_fcat.

  CASE zspb2017-itype.
    WHEN gc_p.
      LOOP AT pt_fcat  ASSIGNING FIELD-SYMBOL(<lfs_fcat>).
        CASE <lfs_fcat>-fieldname.
          WHEN 'GRNUM'.
            <lfs_fcat>-no_out   = gc_x.
          WHEN 'GINUM'.
            <lfs_fcat>-no_out   = gc_x.
          WHEN 'PONUM'.
            <lfs_fcat>-no_out   = gc_x.
          WHEN 'SONUM'.
            <lfs_fcat>-no_out   = gc_x.
          WHEN 'ITNUM'.
            <lfs_fcat>-coltext   = '송장아이템번호'(f13).
          WHEN 'POITM'.
            <lfs_fcat>-coltext   = '구매오더아이템번호'(f14).
          WHEN 'SOITM'.
            <lfs_fcat>-no_out    = gc_x.
          WHEN 'POQTY'.
            <lfs_fcat>-coltext   = '입고수량'(f15).
          WHEN 'PRICE'.
            <lfs_fcat>-coltext   = '단가'(f16).
          WHEN 'TPRICE'.
            <lfs_fcat>-coltext   = '금액'(f19).
            <lfs_fcat>-do_sum    = gc_x.

        ENDCASE.

      ENDLOOP.

    WHEN gc_r.
      LOOP AT pt_fcat ASSIGNING <lfs_fcat>.
        CASE <lfs_fcat>-fieldname.
          WHEN 'GRNUM'.
            <lfs_fcat>-no_out   = gc_x.
          WHEN 'GINUM'.
            <lfs_fcat>-no_out   = gc_x.
          WHEN 'PONUM'.
            <lfs_fcat>-no_out   = gc_x.
          WHEN 'SONUM'.
            <lfs_fcat>-no_out   = gc_x.
          WHEN 'ITNUM'.
            <lfs_fcat>-coltext   = '송장아이템번호'(f13).
          WHEN 'POITM'.
            <lfs_fcat>-no_out    = gc_x.
          WHEN 'SOITM'.
            <lfs_fcat>-coltext   = '판매오더아이템번호'(f17).
          WHEN 'POQTY'.
            <lfs_fcat>-coltext   = '출고수량'(f18).
          WHEN 'PRICE'.
            <lfs_fcat>-coltext   = '단가'(f16).
          WHEN 'TPRICE'.
            <lfs_fcat>-coltext   = '금액'(f19).
            <lfs_fcat>-do_sum    = gc_x.

        ENDCASE.

      ENDLOOP.

  ENDCASE.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT_I
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_fcat_insert  USING VALUE(p_sname) TYPE dd02l-tabname
                         CHANGING pt_fcat TYPE lvc_t_fcat.
  CLEAR pt_fcat.
  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      i_structure_name = p_sname
    CHANGING
      ct_fieldcat      = pt_fcat.

  PERFORM set_fieldcat_insert CHANGING pt_fcat.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FIELDCAT_INSERT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_fieldcat_insert CHANGING pt_fcat  TYPE lvc_t_fcat.
  DATA: ls_fcat TYPE lvc_s_fcat.

  CASE zspb2013-itype.
    WHEN gc_p.
      LOOP AT pt_fcat ASSIGNING FIELD-SYMBOL(<lfs_fcat>).
        CASE <lfs_fcat>-fieldname.
          WHEN 'PONUM'.
            <lfs_fcat>-no_out  = gc_x.
          WHEN 'SONUM'.
            <lfs_fcat>-no_out  = gc_x.
          WHEN 'ITNUM'.
            <lfs_fcat>-coltext = '송장 아이템 번호'(f13).
          WHEN 'POITM'.
            <lfs_fcat>-coltext = '구매오더 아이템 번호'(f14).
          WHEN 'SOITM'.
            <lfs_fcat>-no_out  = gc_x.
          WHEN 'PGRQT'.
            <lfs_fcat>-coltext = '입고수량'(f15).
          WHEN 'PRICE'.
            <lfs_fcat>-coltext = '단가'(f16).
          WHEN 'TPRICE'.
            <lfs_fcat>-coltext = '금액'(f19).
            <lfs_fcat>-do_sum  = gc_x.
          WHEN 'WEARS'.
            <lfs_fcat>-coltext = '통화단위'(f08).

        ENDCASE.

      ENDLOOP.

    WHEN gc_r.
      LOOP AT pt_fcat ASSIGNING <lfs_fcat>.
        CASE <lfs_fcat>-fieldname.
          WHEN 'PONUM'.
            <lfs_fcat>-no_out  = gc_x.
          WHEN 'SONUM'.
            <lfs_fcat>-no_out  = gc_x.
          WHEN 'ITNUM'.
            <lfs_fcat>-coltext = '송장 아이템 번호'(f13).
          WHEN 'POITM'.
            <lfs_fcat>-no_out  = gc_x.
          WHEN 'SOITM'.
            <lfs_fcat>-coltext = '판매오더 아이템 번호'(f17).
          WHEN 'PGRQT'.
            <lfs_fcat>-coltext = '출고수량'(f18).
          WHEN 'PRICE'.
            <lfs_fcat>-coltext = '단가'(f16).
          WHEN 'TPRICE'.
            <lfs_fcat>-coltext = '금액'(f19).
            <lfs_fcat>-do_sum  = gc_x.
          WHEN 'WEARS'.
            <lfs_fcat>-coltext = '통화단위'(f08).

        ENDCASE.

      ENDLOOP.

  ENDCASE.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SELECT_INV_H
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM select_inv_h USING VALUE(pv_invno) TYPE zspb2017-invno
                     CHANGING ps_list TYPE zspb2017.
  CASE gs_list_h-itype.
    WHEN gc_p.
      PERFORM select_inv_h_p USING    pv_invno
                             CHANGING ps_list.

    WHEN gc_r.
      PERFORM select_inv_h_r USING    pv_invno
                             CHANGING ps_list.

  ENDCASE.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  MODIFY_DETAIL_LIST
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM modify_detail_list USING VALUE(pv_iflag)  TYPE zspb2017-iflag
                              VALUE(pv_itype)  TYPE zspb2017-itype
                           CHANGING pv_iflag_t TYPE zspb2017-iflag_t
                                    pv_itype_t TYPE zspb2017-itype_t.
  " 송장 상태명
  READ TABLE gt_domain INTO DATA(ls_domain) WITH KEY domname    = 'ZDPB_IFLAG'
                                                     domvalue_l = pv_iflag.
  IF sy-subrc <> 0.
    PERFORM get_domain_values USING    'ZDPB_IFLAG'
                              CHANGING ls_domain.
    READ TABLE gt_domain INTO ls_domain WITH KEY domname    = 'ZDPB_IFLAG'
                                                   domvalue_l = pv_iflag.
  ENDIF.

  pv_iflag_t = ls_domain-ddtext.


  " 송장 타입명
  READ TABLE gt_domain INTO ls_domain WITH KEY domname    = 'ZDPB_ITYPE'
                                               domvalue_l = pv_itype.
  IF sy-subrc <> 0.
    PERFORM get_domain_values USING    'ZDPB_ITYPE'
                              CHANGING ls_domain.
    READ TABLE gt_domain INTO ls_domain WITH KEY domname    = 'ZDPB_ITYPE'
                                                 domvalue_l = pv_itype.
  ENDIF.

  pv_itype_t = ls_domain-ddtext.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CHECK_BOX
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM condition_check CHANGING pv_subrc.
  IF zspb2021-chk1 IS INITIAL AND
     zspb2021-chk2 IS INITIAL AND
     zspb2021-chk3 IS INITIAL AND
     zspb2021-chk4 IS INITIAL.
    CLEAR: gt_list_h, gt_list_i.
    " 최소 한 개 이상의 체크박스를 선택해주세요.
    MESSAGE i020(zmcpb).
    pv_subrc = 4.
    RETURN.

  ENDIF.

  DATA: lv_year TYPE vtbbewe-atage.
  PERFORM check_date CHANGING lv_year.
  IF lv_year > 2.
    MESSAGE i009(zmcpb) WITH '2년 이내의 날짜범위를'(t19).
    pv_subrc = 4.
    RETURN.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  RH_PM_CONVERT_DATE_TO_MONTH
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM check_date CHANGING pv_year TYPE vtbbewe-atage.
  DATA(lv_begda_p) = zspb2021-stdat_b.
  DATA(lv_endda_p) = zspb2021-stdat_e.
  DATA(lv_begda_r) = zspb2021-pgidt_b.
  DATA(lv_endda_r) = zspb2021-pgidt_e.

  CASE zspb2021-itype.
    WHEN gc_p.
      PERFORM fima_years USING    lv_begda_p
                                  lv_endda_p
                         CHANGING pv_year.

    WHEN gc_r.
      PERFORM fima_years USING    lv_begda_r
                                  lv_endda_r
                         CHANGING pv_year.
  ENDCASE.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FIMA_DAYS_AND_MONTHS_AND_YEARS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM fima_years USING VALUE(pv_i_date_from) TYPE vtbbewe-dbervon
                      VALUE(pv_i_date_to)   TYPE vtbbewe-dberbis
                   CHANGING pv_year         TYPE vtbbewe-atage.
  CALL FUNCTION 'FIMA_DAYS_AND_MONTHS_AND_YEARS'
    EXPORTING
      i_date_from = pv_i_date_from
*     I_KEY_DAY_FROM       =
      i_date_to   = pv_i_date_to
*     I_KEY_DAY_TO         =
*     I_FLG_SEPARATE       = ' '
    IMPORTING
*     E_DAYS      =
*     E_MONTHS    =
      e_years     = pv_year.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CHECK_ITEM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM check_item USING VALUE(pv_itype) TYPE zspb2013-itype
                    CHANGING pv_subrc.
  IF gt_display_item IS INITIAL.
    MESSAGE i007(zmcpb) WITH '송장'(t06).
    pv_subrc = 4.
    RETURN.

  ENDIF.

  IF pv_itype = 'P'.
    SELECT COUNT(*)
      FROM ztpbgri
      INTO @DATA(lv_gr_cnt)
     WHERE grnum EQ @zspb2013-grnum.
    DESCRIBE TABLE gt_display_item LINES DATA(lv_inv_cnt).
    IF lv_gr_cnt <> lv_inv_cnt.
      MESSAGE i000(zmcpb) WITH '입고 아이템 수와 송장 아이템 수가 일치하지 않습니다.'.
      pv_subrc = 4.
      RETURN.

    ENDIF.

  ELSEIF pv_itype = 'R'.
    SELECT COUNT(*)
      FROM ztpbgii
      INTO @DATA(lv_gi_cnt)
     WHERE pgino EQ @zspb2013-ginum.
    DESCRIBE TABLE gt_display_item LINES lv_inv_cnt.
    IF lv_gi_cnt <> lv_inv_cnt.
      MESSAGE i000(zmcpb) WITH '출고 아이템 수와 송장 아이템 수가 일치하지 않습니다.'.
      pv_subrc = 4.
      RETURN.

    ENDIF.

  ENDIF.

ENDFORM.

----------------------------------------------------------------------------------
Extracted by Mass Download version 1.5.5 - E.G.Mellodew. 1998-2025. Sap Release 750
